{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\n\n// User API\nexport const userAPI = {\n  getCurrentUser: () => api.get('/users/me'),\n  updateProfile: data => api.put('/users/me', data),\n  updatePassword: data => api.put('/users/me/password', data),\n  uploadPhoto: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.put('/users/me/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\n\n// Book API\nexport const bookAPI = {\n  getUserBooks: (params = {}) => api.get('/books', {\n    params\n  }),\n  getBookById: id => api.get(`/books/${id}`),\n  createBook: data => {\n    const formData = new FormData();\n    Object.keys(data).forEach(key => {\n      if (data[key] !== null && data[key] !== undefined) {\n        if (key === 'coverImage' || key === 'bookFile') {\n          if (data[key]) {\n            formData.append(key, data[key]);\n          }\n        } else {\n          formData.append(key, data[key]);\n        }\n      }\n    });\n    return api.post('/books', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  updateBook: (id, data) => {\n    const formData = new FormData();\n    Object.keys(data).forEach(key => {\n      if (data[key] !== null && data[key] !== undefined) {\n        if (key === 'coverImage' || key === 'bookFile') {\n          if (data[key]) {\n            formData.append(key, data[key]);\n          }\n        } else {\n          formData.append(key, data[key]);\n        }\n      }\n    });\n    return api.put(`/books/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  deleteBook: id => api.delete(`/books/${id}`)\n};\n\n// Admin API\nexport const adminAPI = {\n  getAllUsers: (params = {}) => api.get('/admin/users', {\n    params\n  }),\n  getUserById: id => api.get(`/admin/users/${id}`),\n  createUser: data => api.post('/admin/users', data),\n  updateUserStatus: (id, status) => api.patch(`/admin/users/${id}/status`, null, {\n    params: {\n      status\n    }\n  }),\n  getUserBooks: (id, params = {}) => api.get(`/admin/users/${id}/books`, {\n    params\n  }),\n  getAllBooks: (params = {}) => api.get('/admin/books', {\n    params\n  })\n};\n\n// File API\nexport const fileAPI = {\n  getFileUrl: path => `${API_BASE_URL}/files/${path}`,\n  getDefaultBookCover: () => `${API_BASE_URL}/files/default-book-cover.jpg`,\n  getDefaultProfilePhoto: () => `${API_BASE_URL}/files/default-profile.jpg`\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","userAPI","getCurrentUser","get","updateProfile","data","put","updatePassword","uploadPhoto","file","formData","FormData","append","bookAPI","getUserBooks","params","getBookById","id","createBook","Object","keys","forEach","key","undefined","updateBook","deleteBook","delete","adminAPI","getAllUsers","getUserById","createUser","updateUserStatus","patch","getAllBooks","fileAPI","getFileUrl","path","getDefaultBookCover","getDefaultProfilePhoto"],"sources":["C:/Users/User/Desktop/BookStorage/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getCurrentUser: () => api.get('/users/me'),\r\n  updateProfile: (data) => api.put('/users/me', data),\r\n  updatePassword: (data) => api.put('/users/me/password', data),\r\n  uploadPhoto: (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return api.put('/users/me/photo', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n  },\r\n};\r\n\r\n// Book API\r\nexport const bookAPI = {\r\n  getUserBooks: (params = {}) => api.get('/books', { params }),\r\n  getBookById: (id) => api.get(`/books/${id}`),\r\n  createBook: (data) => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach(key => {\r\n      if (data[key] !== null && data[key] !== undefined) {\r\n        if (key === 'coverImage' || key === 'bookFile') {\r\n          if (data[key]) {\r\n            formData.append(key, data[key]);\r\n          }\r\n        } else {\r\n          formData.append(key, data[key]);\r\n        }\r\n      }\r\n    });\r\n    return api.post('/books', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n  },\r\n  updateBook: (id, data) => {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach(key => {\r\n      if (data[key] !== null && data[key] !== undefined) {\r\n        if (key === 'coverImage' || key === 'bookFile') {\r\n          if (data[key]) {\r\n            formData.append(key, data[key]);\r\n          }\r\n        } else {\r\n          formData.append(key, data[key]);\r\n        }\r\n      }\r\n    });\r\n    return api.put(`/books/${id}`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n  },\r\n  deleteBook: (id) => api.delete(`/books/${id}`),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  getAllUsers: (params = {}) => api.get('/admin/users', { params }),\r\n  getUserById: (id) => api.get(`/admin/users/${id}`),\r\n  createUser: (data) => api.post('/admin/users', data),\r\n  updateUserStatus: (id, status) => api.patch(`/admin/users/${id}/status`, null, { params: { status } }),\r\n  getUserBooks: (id, params = {}) => api.get(`/admin/users/${id}/books`, { params }),\r\n  getAllBooks: (params = {}) => api.get('/admin/books', { params }),\r\n};\r\n\r\n// File API\r\nexport const fileAPI = {\r\n  getFileUrl: (path) => `${API_BASE_URL}/files/${path}`,\r\n  getDefaultBookCover: () => `${API_BASE_URL}/files/default-book-cover.jpg`,\r\n  getDefaultProfilePhoto: () => `${API_BASE_URL}/files/default-profile.jpg`,\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}